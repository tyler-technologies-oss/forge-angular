// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { AccordionComponent as AccordionComponentCustomElement, defineAccordionComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-accordion',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class AccordionComponent {

	/** The forge-accordion element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** Gets/sets the selector to use for finding the child expansion panels. Defaults to searching the direct children for `<forge-expansion-panel>` elements. */
	@Input()
	public set panelSelector(value: AccordionComponentCustomElement['panelSelector']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.panelSelector = value;
		});
	}
	public get panelSelector(): AccordionComponentCustomElement['panelSelector'] {
		return this.nativeElement.panelSelector;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<AccordionComponentCustomElement>,
		protected zone: NgZone
	) {
		defineAccordionComponent();
		changeDetectorRef.detach();
	}
}
