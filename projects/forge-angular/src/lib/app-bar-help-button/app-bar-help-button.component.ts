// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input, inject } from '@angular/core';
import { AppBarHelpButtonComponent as AppBarHelpButtonComponentCustomElement, defineAppBarHelpButtonComponent } from '@tylertech/forge';

/**  */
@Component({
    selector: 'forge-app-bar-help-button',
    changeDetection: ChangeDetectionStrategy.OnPush,
    template: '<ng-content />',
    standalone: false
})
export class AppBarHelpButtonComponent {
	protected elementRef = inject<ElementRef<AppBarHelpButtonComponentCustomElement>>(ElementRef);
	protected zone = inject(NgZone);

	/** The forge-app-bar-help-button element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** The menu options to display when the button is clicked */
	@Input()
	public set options(value: AppBarHelpButtonComponentCustomElement['options']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.options = value;
		});
	}
	public get options(): AppBarHelpButtonComponentCustomElement['options'] {
		return this.nativeElement.options;
	}

	/** The name of an alternative icon to display. */
	@Input()
	public set icon(value: AppBarHelpButtonComponentCustomElement['icon']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.icon = value;
		});
	}
	public get icon(): AppBarHelpButtonComponentCustomElement['icon'] {
		return this.nativeElement.icon;
	}

	constructor() {
		const changeDetectorRef = inject(ChangeDetectorRef);

		defineAppBarHelpButtonComponent();
		changeDetectorRef.detach();
	}
}
