// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { AppBarHelpButtonComponent as AppBarHelpButtonComponentCustomElement, defineAppBarHelpButtonComponent } from '@tylertech/forge';

/** The web component class behind the `<forge-app-bar-help-button>` custom element. */
@Component({
  selector: 'forge-app-bar-help-button',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class AppBarHelpButtonComponent {

	/** The forge-app-bar-help-button element. */
	public readonly nativeElement = this.elementRef.nativeElement;


	@Input()
	public set options(value: AppBarHelpButtonComponentCustomElement['options']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.options = value;
		});
	}
	public get options(): AppBarHelpButtonComponentCustomElement['options'] {
		return this.nativeElement.options;
	}


	public initializedCallback(...args: Parameters<AppBarHelpButtonComponentCustomElement['initializedCallback']>): ReturnType<AppBarHelpButtonComponentCustomElement['initializedCallback']> {
		return this.zone.runOutsideAngular(() => this.nativeElement.initializedCallback(...args));
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<AppBarHelpButtonComponentCustomElement>,
		protected zone: NgZone
	) {
		defineAppBarHelpButtonComponent();
		changeDetectorRef.detach();
	}
}
