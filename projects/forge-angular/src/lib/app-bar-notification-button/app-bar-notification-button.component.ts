// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { AppBarNotificationButtonComponent as AppBarNotificationButtonComponentCustomElement, defineAppBarNotificationButtonComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-app-bar-notification-button',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class AppBarNotificationButtonComponent {

	/** The forge-app-bar-notification-button element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** The number to display in the badge. */
	@Input()
	public set count(value: AppBarNotificationButtonComponentCustomElement['count']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.count = value;
		});
	}
	public get count(): AppBarNotificationButtonComponentCustomElement['count'] {
		return this.nativeElement.count;
	}

	/** Whether to display the dot variant of the badge or not. */
	@Input({ transform: booleanAttribute })
	public set dot(value: AppBarNotificationButtonComponentCustomElement['dot']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.dot = value;
		});
	}
	public get dot(): AppBarNotificationButtonComponentCustomElement['dot'] {
		return this.nativeElement.dot;
	}

	/** The theme to apply to the badge. */
	@Input()
	public set theme(value: AppBarNotificationButtonComponentCustomElement['theme']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.theme = value;
		});
	}
	public get theme(): AppBarNotificationButtonComponentCustomElement['theme'] {
		return this.nativeElement.theme;
	}

	/** The name of an alternative icon to display. */
	@Input()
	public set icon(value: AppBarNotificationButtonComponentCustomElement['icon']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.icon = value;
		});
	}
	public get icon(): AppBarNotificationButtonComponentCustomElement['icon'] {
		return this.nativeElement.icon;
	}

	/** Whether to display the badge or not. */
	@Input({ transform: booleanAttribute })
	public set showBadge(value: AppBarNotificationButtonComponentCustomElement['showBadge']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.showBadge = value;
		});
	}
	public get showBadge(): AppBarNotificationButtonComponentCustomElement['showBadge'] {
		return this.nativeElement.showBadge;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<AppBarNotificationButtonComponentCustomElement>,
		protected zone: NgZone
	) {
		defineAppBarNotificationButtonComponent();
		changeDetectorRef.detach();
	}
}
