// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { AppBarComponent as AppBarComponentCustomElement, defineAppBarComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-app-bar',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class AppBarComponent {

	/** The forge-app-bar element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** The text to display in the title. */
	@Input()
	public set titleText(value: AppBarComponentCustomElement['titleText']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.titleText = value;
		});
	}
	public get titleText(): AppBarComponentCustomElement['titleText'] {
		return this.nativeElement.titleText;
	}

	/** The elevation of the app bar. */
	@Input()
	public set elevation(value: AppBarComponentCustomElement['elevation']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.elevation = value;
		});
	}
	public get elevation(): AppBarComponentCustomElement['elevation'] {
		return this.nativeElement.elevation;
	}

	/** The theme of the app bar. */
	@Input()
	public set theme(value: AppBarComponentCustomElement['theme']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.theme = value;
		});
	}
	public get theme(): AppBarComponentCustomElement['theme'] {
		return this.nativeElement.theme;
	}

	/** The href that will be used to make the logo and title area a clickable link. */
	@Input()
	public set href(value: AppBarComponentCustomElement['href']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.href = value;
		});
	}
	public get href(): AppBarComponentCustomElement['href'] {
		return this.nativeElement.href;
	}


	@Input()
	public set target(value: AppBarComponentCustomElement['target']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.target = value;
		});
	}
	public get target(): AppBarComponentCustomElement['target'] {
		return this.nativeElement.target;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<AppBarComponentCustomElement>,
		protected zone: NgZone
	) {
		defineAppBarComponent();
		changeDetectorRef.detach();
	}
}
