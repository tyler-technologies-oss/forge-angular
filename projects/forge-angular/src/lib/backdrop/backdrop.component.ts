// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { BackdropComponent as BackdropComponentCustomElement, defineBackdropComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-backdrop',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class BackdropComponent {

	/** The forge-backdrop element. */
	public readonly nativeElement = this.elementRef.nativeElement;


	@Input({ transform: booleanAttribute })
	public set visible(value: BackdropComponentCustomElement['visible']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.visible = value;
		});
	}
	public get visible(): BackdropComponentCustomElement['visible'] {
		return this.nativeElement.visible;
	}


	@Input({ transform: booleanAttribute })
	public set fixed(value: BackdropComponentCustomElement['fixed']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.fixed = value;
		});
	}
	public get fixed(): BackdropComponentCustomElement['fixed'] {
		return this.nativeElement.fixed;
	}


	public show(...args: Parameters<BackdropComponentCustomElement['show']>): ReturnType<BackdropComponentCustomElement['show']> {
		return this.zone.runOutsideAngular(() => this.nativeElement.show(...args));
	}


	public hide(...args: Parameters<BackdropComponentCustomElement['hide']>): ReturnType<BackdropComponentCustomElement['hide']> {
		return this.zone.runOutsideAngular(() => this.nativeElement.hide(...args));
	}


	public fadeIn(...args: Parameters<BackdropComponentCustomElement['fadeIn']>): ReturnType<BackdropComponentCustomElement['fadeIn']> {
		return this.zone.runOutsideAngular(() => this.nativeElement.fadeIn(...args));
	}


	public fadeOut(...args: Parameters<BackdropComponentCustomElement['fadeOut']>): ReturnType<BackdropComponentCustomElement['fadeOut']> {
		return this.zone.runOutsideAngular(() => this.nativeElement.fadeOut(...args));
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<BackdropComponentCustomElement>,
		protected zone: NgZone
	) {
		defineBackdropComponent();
		changeDetectorRef.detach();
	}
}
