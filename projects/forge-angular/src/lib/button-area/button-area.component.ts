// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { ButtonAreaComponent as ButtonAreaComponentCustomElement, defineButtonAreaComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-button-area',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class ButtonAreaComponent {

	/** The forge-button-area element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** Sets whether the button area and slotted button are disabled. Setting this on one will also set it on the other. */
	@Input({ transform: booleanAttribute })
	public set disabled(value: ButtonAreaComponentCustomElement['disabled']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.disabled = value;
		});
	}
	public get disabled(): ButtonAreaComponentCustomElement['disabled'] {
		return this.nativeElement.disabled;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<ButtonAreaComponentCustomElement>,
		protected zone: NgZone
	) {
		defineButtonAreaComponent();
		changeDetectorRef.detach();
	}
}
