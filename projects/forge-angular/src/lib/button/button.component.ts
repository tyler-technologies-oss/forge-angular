// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { ButtonComponent as ButtonComponentCustomElement, defineButtonComponent } from '@tylertech/forge';

/** The custom element class behind the `<forge-button>` element. */
@Component({
  selector: 'forge-button',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class ButtonComponent {

	/** The forge-button element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/**
	 * Sets the type of button decoration.
	 * Possible values are: raised, elevated, outlined, and dense.
	 * Can be combined as: outlined-dense.
	 */
	@Input()
	public set type(value: ButtonComponentCustomElement['type']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.type = value;
		});
	}
	public get type(): ButtonComponentCustomElement['type'] {
		return this.nativeElement.type;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<ButtonComponentCustomElement>,
		protected zone: NgZone
	) {
		defineButtonComponent();
		changeDetectorRef.detach();
	}
}
