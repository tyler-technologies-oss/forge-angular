// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input, inject } from '@angular/core';
import { InlineMessageComponent as InlineMessageComponentCustomElement, defineInlineMessageComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-inline-message',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>',
  standalone: false
})
export class InlineMessageComponent {
	protected elementRef = inject<ElementRef<InlineMessageComponentCustomElement>>(ElementRef);
	protected zone = inject(NgZone);

	/** The forge-inline-message element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** The theme to apply. */
	@Input()
	public set theme(value: InlineMessageComponentCustomElement['theme']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.theme = value;
		});
	}
	public get theme(): InlineMessageComponentCustomElement['theme'] {
		return this.nativeElement.theme;
	}

	constructor() {
		defineInlineMessageComponent();
		const changeDetectorRef = inject(ChangeDetectorRef);
		changeDetectorRef.detach();
	}
}
