// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { KeyItemComponent as KeyItemComponentCustomElement, defineKeyItemComponent } from '@tylertech/forge';

/**  */
@Component({
    selector: 'forge-key-item',
    changeDetection: ChangeDetectionStrategy.OnPush,
    template: '<ng-content></ng-content>',
    standalone: false
})
export class KeyItemComponent {

	/** The forge-key-item element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** Whether the label and value dislay on one line. */
	@Input({ transform: booleanAttribute })
	public set inline(value: KeyItemComponentCustomElement['inline']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.inline = value;
		});
	}
	public get inline(): KeyItemComponentCustomElement['inline'] {
		return this.nativeElement.inline;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<KeyItemComponentCustomElement>,
		protected zone: NgZone
	) {
		defineKeyItemComponent();
		changeDetectorRef.detach();
	}
}
