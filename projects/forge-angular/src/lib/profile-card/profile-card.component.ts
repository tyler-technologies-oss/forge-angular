// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, numberAttribute, Input } from '@angular/core';
import { ProfileCardComponent as ProfileCardComponentCustomElement, defineProfileCardComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-profile-card',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class ProfileCardComponent {

	/** The forge-profile-card element. */
	public readonly nativeElement = this.elementRef.nativeElement;


	@Input()
	public set fullName(value: ProfileCardComponentCustomElement['fullName']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.fullName = value;
		});
	}
	public get fullName(): ProfileCardComponentCustomElement['fullName'] {
		return this.nativeElement.fullName;
	}


	@Input()
	public set email(value: ProfileCardComponentCustomElement['email']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.email = value;
		});
	}
	public get email(): ProfileCardComponentCustomElement['email'] {
		return this.nativeElement.email;
	}


	@Input({ transform: booleanAttribute })
	public set signOut(value: ProfileCardComponentCustomElement['signOut']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.signOut = value;
		});
	}
	public get signOut(): ProfileCardComponentCustomElement['signOut'] {
		return this.nativeElement.signOut;
	}


	@Input({ transform: booleanAttribute })
	public set profile(value: ProfileCardComponentCustomElement['profile']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.profile = value;
		});
	}
	public get profile(): ProfileCardComponentCustomElement['profile'] {
		return this.nativeElement.profile;
	}


	@Input()
	public set signOutText(value: ProfileCardComponentCustomElement['signOutText']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.signOutText = value;
		});
	}
	public get signOutText(): ProfileCardComponentCustomElement['signOutText'] {
		return this.nativeElement.signOutText;
	}


	@Input()
	public set profileText(value: ProfileCardComponentCustomElement['profileText']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.profileText = value;
		});
	}
	public get profileText(): ProfileCardComponentCustomElement['profileText'] {
		return this.nativeElement.profileText;
	}


	@Input()
	public set avatarText(value: ProfileCardComponentCustomElement['avatarText']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.avatarText = value;
		});
	}
	public get avatarText(): ProfileCardComponentCustomElement['avatarText'] {
		return this.nativeElement.avatarText;
	}


	@Input()
	public set avatarIcon(value: ProfileCardComponentCustomElement['avatarIcon']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.avatarIcon = value;
		});
	}
	public get avatarIcon(): ProfileCardComponentCustomElement['avatarIcon'] {
		return this.nativeElement.avatarIcon;
	}


	@Input()
	public set avatarImageUrl(value: ProfileCardComponentCustomElement['avatarImageUrl']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.avatarImageUrl = value;
		});
	}
	public get avatarImageUrl(): ProfileCardComponentCustomElement['avatarImageUrl'] {
		return this.nativeElement.avatarImageUrl;
	}


	@Input({ transform: numberAttribute })
	public set avatarLetterCount(value: ProfileCardComponentCustomElement['avatarLetterCount']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.avatarLetterCount = value;
		});
	}
	public get avatarLetterCount(): ProfileCardComponentCustomElement['avatarLetterCount'] {
		return this.nativeElement.avatarLetterCount;
	}


	public focus(...args: Parameters<ProfileCardComponentCustomElement['focus']>): ReturnType<ProfileCardComponentCustomElement['focus']> {
		return this.zone.runOutsideAngular(() => this.nativeElement.focus(...args));
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<ProfileCardComponentCustomElement>,
		protected zone: NgZone
	) {
		defineProfileCardComponent();
		changeDetectorRef.detach();
	}
}
