// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { ProfileCardComponent as ProfileCardComponentCustomElement, defineProfileCardComponent } from '@tylertech/forge';

/** The web component class behind the `<forge-profile-card>` custom element. */
@Component({
  selector: 'forge-profile-card',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class ProfileCardComponent {


	@Input()
	public set fullName(value: ProfileCardComponentCustomElement['fullName']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.fullName = value;
		});
	}

	public get fullName(): ProfileCardComponentCustomElement['fullName'] {
		return this.elementRef.nativeElement.fullName;
	}


	@Input()
	public set email(value: ProfileCardComponentCustomElement['email']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.email = value;
		});
	}

	public get email(): ProfileCardComponentCustomElement['email'] {
		return this.elementRef.nativeElement.email;
	}


	@Input()
	public set signOut(value: ProfileCardComponentCustomElement['signOut'] | string) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.signOut = value != null && `${value}` !== 'false';
		});
	}

	public get signOut(): ProfileCardComponentCustomElement['signOut'] {
		return this.elementRef.nativeElement.signOut;
	}


	@Input()
	public set profile(value: ProfileCardComponentCustomElement['profile'] | string) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.profile = value != null && `${value}` !== 'false';
		});
	}

	public get profile(): ProfileCardComponentCustomElement['profile'] {
		return this.elementRef.nativeElement.profile;
	}


	@Input()
	public set signOutText(value: ProfileCardComponentCustomElement['signOutText']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.signOutText = value;
		});
	}

	public get signOutText(): ProfileCardComponentCustomElement['signOutText'] {
		return this.elementRef.nativeElement.signOutText;
	}


	@Input()
	public set profileText(value: ProfileCardComponentCustomElement['profileText']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.profileText = value;
		});
	}

	public get profileText(): ProfileCardComponentCustomElement['profileText'] {
		return this.elementRef.nativeElement.profileText;
	}


	@Input()
	public set avatarText(value: ProfileCardComponentCustomElement['avatarText']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.avatarText = value;
		});
	}

	public get avatarText(): ProfileCardComponentCustomElement['avatarText'] {
		return this.elementRef.nativeElement.avatarText;
	}


	@Input()
	public set avatarIcon(value: ProfileCardComponentCustomElement['avatarIcon']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.avatarIcon = value;
		});
	}

	public get avatarIcon(): ProfileCardComponentCustomElement['avatarIcon'] {
		return this.elementRef.nativeElement.avatarIcon;
	}


	@Input()
	public set avatarImageUrl(value: ProfileCardComponentCustomElement['avatarImageUrl']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.avatarImageUrl = value;
		});
	}

	public get avatarImageUrl(): ProfileCardComponentCustomElement['avatarImageUrl'] {
		return this.elementRef.nativeElement.avatarImageUrl;
	}


	@Input()
	public set avatarLetterCount(value: ProfileCardComponentCustomElement['avatarLetterCount'] | string) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.avatarLetterCount = +value;
		});
	}

	public get avatarLetterCount(): ProfileCardComponentCustomElement['avatarLetterCount'] {
		return this.elementRef.nativeElement.avatarLetterCount;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<ProfileCardComponentCustomElement>,
		protected zone: NgZone
	) {
		defineProfileCardComponent();
		changeDetectorRef.detach();
	}
}
