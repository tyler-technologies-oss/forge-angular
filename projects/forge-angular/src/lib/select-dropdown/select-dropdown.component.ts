// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { booleanAttribute, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { SelectDropdownComponent as SelectDropdownComponentCustomElement, defineSelectDropdownComponent } from '@tylertech/forge';

/**  */
@Component({
  selector: 'forge-select-dropdown',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class SelectDropdownComponent {

	/** The forge-select-dropdown element. */
	public readonly nativeElement = this.elementRef.nativeElement;

	/** Sets the target element CSS selector */
	@Input()
	public set target(value: SelectDropdownComponentCustomElement['target']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.target = value;
		});
	}
	public get target(): SelectDropdownComponentCustomElement['target'] {
		return this.nativeElement.target;
	}

	/** Sets the selected text element CSS selector */
	@Input()
	public set selectedTextTarget(value: SelectDropdownComponentCustomElement['selectedTextTarget']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.selectedTextTarget = value;
		});
	}
	public get selectedTextTarget(): SelectDropdownComponentCustomElement['selectedTextTarget'] {
		return this.nativeElement.selectedTextTarget;
	}

	/** Controls whether the selected text is synchronized to the target elements' text content. Default is false. */
	@Input({ transform: booleanAttribute })
	public set syncSelectedText(value: SelectDropdownComponentCustomElement['syncSelectedText']) {
		this.zone.runOutsideAngular(() => {
			this.nativeElement.syncSelectedText = value;
		});
	}
	public get syncSelectedText(): SelectDropdownComponentCustomElement['syncSelectedText'] {
		return this.nativeElement.syncSelectedText;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<SelectDropdownComponentCustomElement>,
		protected zone: NgZone
	) {
		defineSelectDropdownComponent();
		changeDetectorRef.detach();
	}
}
