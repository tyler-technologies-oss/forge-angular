// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { ToolbarComponent as ToolbarComponentCustomElement, defineToolbarComponent } from '@tylertech/forge';

/** The web component class behind the `<forge-toolbar>` custom element. */
@Component({
  selector: 'forge-toolbar',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class ToolbarComponent {


	@Input()
	public set inverted(value: ToolbarComponentCustomElement['inverted'] | string) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.inverted = value != null && `${value}` !== 'false';
		});
	}

	public get inverted(): ToolbarComponentCustomElement['inverted'] {
		return this.elementRef.nativeElement.inverted;
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<ToolbarComponentCustomElement>,
		protected zone: NgZone
	) {
		defineToolbarComponent();
		changeDetectorRef.detach();
	}
}
