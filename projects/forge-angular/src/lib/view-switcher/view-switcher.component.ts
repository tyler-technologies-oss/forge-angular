// This code was generated by the angular-custom-elements-schematic.  Any changes will be overwritten next time it runs.
import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Input } from '@angular/core';
import { ViewSwitcherComponent as ViewSwitcherComponentCustomElement, defineViewSwitcherComponent } from '@tylertech/forge';

/** The web component class behind the `<forge-view-switcher>` custom element. */
@Component({
  selector: 'forge-view-switcher',
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: '<ng-content></ng-content>'
})
export class ViewSwitcherComponent {

	/** Gets/sets the currently visible view index. */
	@Input()
	public set index(value: ViewSwitcherComponentCustomElement['index'] | string) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.index = +value;
		});
	}

	public get index(): ViewSwitcherComponentCustomElement['index'] {
		return this.elementRef.nativeElement.index;
	}

	/** Gets/sets the animation type. */
	@Input()
	public set animationType(value: ViewSwitcherComponentCustomElement['animationType']) {
		this.zone.runOutsideAngular(() => {
			this.elementRef.nativeElement.animationType = value;
		});
	}

	public get animationType(): ViewSwitcherComponentCustomElement['animationType'] {
		return this.elementRef.nativeElement.animationType;
	}

	/** Transitions to the next view. */
	public next(...args: Parameters<ViewSwitcherComponentCustomElement['next']>): ReturnType<ViewSwitcherComponentCustomElement['next']> {
		return this.zone.runOutsideAngular(() => this.elementRef.nativeElement.next(...args));
	}

	/** Transitions to the previous view. */
	public previous(...args: Parameters<ViewSwitcherComponentCustomElement['previous']>): ReturnType<ViewSwitcherComponentCustomElement['previous']> {
		return this.zone.runOutsideAngular(() => this.elementRef.nativeElement.previous(...args));
	}

	/** Transitions to the first view. */
	public goToStart(...args: Parameters<ViewSwitcherComponentCustomElement['goToStart']>): ReturnType<ViewSwitcherComponentCustomElement['goToStart']> {
		return this.zone.runOutsideAngular(() => this.elementRef.nativeElement.goToStart(...args));
	}

	/** Transitions to the last view. */
	public goToEnd(...args: Parameters<ViewSwitcherComponentCustomElement['goToEnd']>): ReturnType<ViewSwitcherComponentCustomElement['goToEnd']> {
		return this.zone.runOutsideAngular(() => this.elementRef.nativeElement.goToEnd(...args));
	}

	constructor(
		changeDetectorRef: ChangeDetectorRef,
		protected elementRef: ElementRef<ViewSwitcherComponentCustomElement>,
		protected zone: NgZone
	) {
		defineViewSwitcherComponent();
		changeDetectorRef.detach();
	}
}
